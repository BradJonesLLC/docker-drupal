{"name":"Drupal on Docker","tagline":"Docker scaffolding for Drupal 8","body":"# Docker Scaffolding for Drupal 8\r\n\r\n## Purpose\r\nThis script is intended for one-time, initial scaffolding of a new [Drupal 8](http://drupal.org) project,\r\nwhich would then be self-contained. It uses the [drupal-project](https://github.com/drupal-composer/drupal-project)\r\nto pull in Drupal core, and provides additional helpful Docker-focused functionality.\r\nThe drupal-project `composer.json` file and helper scripts can then be used to manage\r\ncore updates, contrib modules and more. Drupal 8, with its robust exportable configuration\r\nfile management and composer integration, is uniquely suited for containerized development.\r\n\r\n## Usage/Quick-Start\r\n```\r\ncurl -sS https://raw.githubusercontent.com/BradJonesLLC/docker-drupal/master/install.sh | bash -s PROJECT-NAME\r\n```\r\n...Will install into a new directory named PROJECT-NAME and configure certain docker-compose helpers with that\r\nsame name.\r\n\r\n### Default addresses and command examples\r\n- Start for first time; create data container, install Drupal: `make make-data && docker-compose up`\r\n- Web: `http://localhost:8082`\r\n- Mailcatcher: `http://localhost:1082`\r\n- Get a login for uid 1, after install: `ddrush uli`\r\n\r\n## Features\r\nYour new Drupal 8 site comes with a number of helper scripts and config files that\r\nspeed development in a containerized environment and production deployment.\r\n+ A `Dockerfile` that includes all required and some suggested PHP extensions for Drupal 8\r\n  (including the [Twig extension](http://twig.sensiolabs.org/doc/installation.html#installing-the-c-extension))\r\n+ A quick-start [Docker Compose](https://docs.docker.com/compose/) file, which provides\r\n  an Apache/PHP web container and mysql container\r\n+ Site installation with:\r\n  - Optional force-set of an existing site UUID and import of configuration files,\r\n    if present.\r\n  - Sensible default `settings.php`, `settings.local.php` and `development.services.yml` files.\r\n+ Scripts respond to environment variables, with defaults in the docker-compose.yml file:\r\n  - In development mode, enables Mailcatcher, and Xdebug for Apache, and\r\n    toggles inclusion of `settings.local.php` and `development.services.yml`\r\n  - `SSL`, if set to `FALSE`, disables SSL support (useful for development environments.)\r\n+ Native SSL support (see below.)\r\n+ A `Makefile` for quickly creating a data container for the mysql container (run `make make-data`)\r\n+ Wrapper scripts:\r\n  - `ddrush`, for executing [drush](https://github.com/drush-ops/drush) inside the\r\n    web container, with a starter global `/etc/drush/drushrc.php` file.\r\n  - `dbash`, a shortcut for getting a bash shell inside the web container (as *www-data*)\r\n+ An `.envrc` file, for use with [direnv](http://direnv.net/), that:\r\n  - Tells wrapper scripts the correct container to execute against (by pattern).\r\n  - Includes the wrapper script and the `vendor/bin` directory into the PATH.\r\n+ Xdebug for development, and all invocations of the `ddrush` helper script\r\n+ [Mailcatcher](http://mailcatcher.me/) for debugging sent mail.\r\n+ `.dockerignore` excludes VCS and uploaded files. Docker runs `composer install`\r\n  inside the container on build, though if your development environment includes\r\n  many of those files, having them copied into the container saves some time on\r\n  build. See *Development Workflow*, below.\r\n+ All processes in the web container log to `STDOUT`; this is useful if you wish to\r\n  aggregate your Docker container logs or integrate with an external log service\r\n  such as [Logentries](https://logentries.com/learnmore?code=e500f810).\r\n+ An optional `rsyslog.json.conf` file, which will format log output in JSON format;\r\n  this expects JSON output directly from Drupal; consider using a module like\r\n  [Syslog JSON](https://www.drupal.org/sandbox/bradjones1/2569795)\r\n+ Default configuration files for [PhpStorm](https://www.jetbrains.com/phpstorm/),\r\n  including a server configuration and path mapping for Xdebug and setting max\r\n  debug connections == 10 for [compatibility with](https://github.com/drush-ops/drush/issues/1534)\r\n  Drush's subrequests.\r\n+ A default cron implementation via crontab, which runs only when not in\r\n  development mode. Set the `SITE_URL` environment variable, so Drupal constructs\r\n  appropriate self-referential URLs during cron.\r\n\r\n## Copyright and License\r\n&copy; Brad Jones LLC. Licensed under GPL 2.\r\n","google":"UA-68548029-2","note":"Don't delete this file! It's used internally to help with page regeneration."}